import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

import java.nio.file.Files

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

tasks.register('generateAnnotationProcessorServicesFile'){

    var target = file("src/main/resources/META-INF/services/javax.annotation.processing.Processor")
    target.parentFile.mkdirs()
    target.createNewFile()
    target.text = ""

    var classesDir = fileTree("src/main/java/com/xkball/tin_tea_tech/annotation_processor")
    var classFiles = classesDir.getFiles().findAll { it.name.endsWith('.java') }
    classFiles.each {
        var path = it.path
        var offset = path.indexOf("xkball")
        if(offset >= 0) target.text += path.substring(offset-4,path.length()-5).replace("\\",".").replace("/",".") + '\n'
        println path
    }
    println target.path
    println target.text
    inputs.dir file("src/main/java")
    outputs.file target
}



tasks.named("processResources") {
    dependsOn generateAnnotationProcessorServicesFile
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.named("build"){
    jar {
        archiveBaseName = "TinTeaTech-LocalAnnotationProcessor"
        archiveVersion.set(localAnnotationProcessorVersion)
       // destinationDirectory = file("../build/local_annotation_processor/lib")
    }

}

tasks.named("shadowJar", ShadowJar){
    shadowJar.archiveBaseName = "TinTeaTech-LocalAnnotationProcessor"
    shadowJar.archiveVersion.set(localAnnotationProcessorVersion)
    //relocate 'com.google.guava', 'com.github.javaparser.com.google.guava'

}

jar {
    archiveBaseName = "TinTeaTech-LocalAnnotationProcessor"
    archiveVersion.set(localAnnotationProcessorVersion)
}

tasks.withType(JavaCompile).configureEach {
    getSource().files
//    outputs.upToDateWhen { false }
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
//    options.fork = true
//    options.forkOptions.jvmArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED')
//    options.forkOptions.jvmArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED')
//    options.forkOptions.jvmArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED')
//    options.forkOptions.jvmArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED')
//    options.forkOptions.jvmArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED')
//    options.forkOptions.jvmArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED')
//    options.forkOptions.jvmArgs.add('-ea')


    options.compilerArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED')
    options.compilerArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED')
    options.compilerArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED')
    options.compilerArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED')
    options.compilerArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED')
    options.compilerArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED')
    options.compilerArgs.add('--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.ow2.asm:asm:9.6'
    implementation 'org.ow2.asm:asm-tree:9.6'
    implementation 'org.ow2.asm:asm-util:9.6'
    implementation 'org.jetbrains:annotations:24.1.0'
//    implementation 'com.google.guava:guava:33.3.0-jre'
    implementation 'com.github.javaparser:javaparser-core:3.26.2'
//    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.26.2'
}

tasks.register("runTest", JavaExec) {
    mainClass = "dev.vfyjxf.cumulonimbus.test.SampleJavacPluginTest"
    classpath = sourceSets.main.runtimeClasspath
}

publishing { PublishingExtension it ->
    publications {
        // noinspection GroovyAssignabilityCheck
        release(MavenPublication) {
            // noinspection GroovyAssignabilityCheck
            from components.java
            // noinspection GroovyAssignabilityCheck
            groupId = "com.xkball"
            // noinspection GroovyAssignabilityCheck
            artifactId = 'TinTeaTech-LocalAnnotationProcessor'
            // noinspection GroovyAssignabilityCheck
            version = localAnnotationProcessorVersion
            pom {
                // noinspection GroovyAssignabilityCheck
                name = 'TinTeaTech-LocalAnnotationProcessor'
                // noinspection GroovyAssignabilityCheck
                url = "https://github.com/xkball/TinTeaTech"
                developers {
                    developer {
                        //noinspection GroovyAssignabilityCheck
                        id = 'xkball'
                        //noinspection GroovyAssignabilityCheck
                        name = 'xkball'
                    }
                }
            }
        }
    }
}
